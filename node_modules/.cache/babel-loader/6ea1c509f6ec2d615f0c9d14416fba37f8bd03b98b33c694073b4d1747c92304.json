{"ast":null,"code":"// src/wallet.js\nimport { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\nconst network = clusterApiUrl('devnet');\nconst connection = new Connection(network);\n\n// Συνάρτηση για σύνδεση με πορτοφόλι Phantom\nexport const connectWallet = async () => {\n  if (!window.solana) {\n    alert('Please install a Solana wallet extension like Phantom.');\n    return null;\n  }\n  try {\n    const response = await window.solana.connect();\n    const publicKey = response.publicKey.toString();\n    console.log('Connected to wallet with address:', publicKey);\n    return publicKey;\n  } catch (error) {\n    console.error('Wallet connection error:', error);\n    return null;\n  }\n};\n\n// Συνάρτηση για έλεγχο αν το πορτοφόλι είναι συνδεδεμένο\nexport const isWalletConnected = () => {\n  return window.solana && window.solana.isConnected;\n};","map":{"version":3,"names":["Connection","PublicKey","clusterApiUrl","network","connection","connectWallet","window","solana","alert","response","connect","publicKey","toString","console","log","error","isWalletConnected","isConnected"],"sources":["C:/Users/panag/OneDrive/Υπολογιστής/solanawallet2/src/wallet.js"],"sourcesContent":["// src/wallet.js\r\nimport { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\r\n\r\nconst network = clusterApiUrl('devnet');\r\nconst connection = new Connection(network);\r\n\r\n// Συνάρτηση για σύνδεση με πορτοφόλι Phantom\r\nexport const connectWallet = async () => {\r\n  if (!window.solana) {\r\n    alert('Please install a Solana wallet extension like Phantom.');\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const response = await window.solana.connect();\r\n    const publicKey = response.publicKey.toString();\r\n    console.log('Connected to wallet with address:', publicKey);\r\n    return publicKey;\r\n  } catch (error) {\r\n    console.error('Wallet connection error:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Συνάρτηση για έλεγχο αν το πορτοφόλι είναι συνδεδεμένο\r\nexport const isWalletConnected = () => {\r\n  return window.solana && window.solana.isConnected;\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,UAAU,EAAEC,SAAS,EAAEC,aAAa,QAAQ,iBAAiB;AAEtE,MAAMC,OAAO,GAAGD,aAAa,CAAC,QAAQ,CAAC;AACvC,MAAME,UAAU,GAAG,IAAIJ,UAAU,CAACG,OAAO,CAAC;;AAE1C;AACA,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;IAClBC,KAAK,CAAC,wDAAwD,CAAC;IAC/D,OAAO,IAAI;EACb;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACC,MAAM,CAACG,OAAO,CAAC,CAAC;IAC9C,MAAMC,SAAS,GAAGF,QAAQ,CAACE,SAAS,CAACC,QAAQ,CAAC,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,SAAS,CAAC;IAC3D,OAAOA,SAAS;EAClB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAOV,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACU,WAAW;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}